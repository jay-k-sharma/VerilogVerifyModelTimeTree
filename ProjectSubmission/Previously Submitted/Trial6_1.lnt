module Trial6_1 with ==, !=, >= is

------------------------------------------------------------------------
--  Types
------------------------------------------------------------------------
type Event is Event (ID: Nat, Date: Nat, Year: Nat, TimeHour: Nat, TimeMin: Nat) end type
type Memo is Memo (ID: Nat, MemoContent: Nat) end type
type Activity is Activity (ID: Nat, CalendarID: Nat, EventUpdate: bool, MemoUpdate: bool, ObjectID: Nat) end type

type ListOfCalendarID is list of Nat with empty, head, tail, member end type

type ListOfUserID is list of Nat with empty, head, tail, member end type

type ListOfEvent is list of Event with empty, head, tail, member end type
-- type ListOfEvent is list of Event end type

type ListOfMemo is list of Memo with empty, head, tail, member end type
-- type ListOfMemo is list of Memo end type

type ListOfActivity is list of Activity with empty, head, tail, member end type
-- type ListOfActivity is list of Activity end type


------------------------------------------------------------------------
--  Channels
------------------------------------------------------------------------
channel N is (NatNum: Nat) end channel
channel N2 is (NatNum1: Nat, NatNum2: Nat) end channel

------------------------------------------------------------------------
--  Processes
------------------------------------------------------------------------

	process CalendarManager [CalendarActivtyUpdate, EventActivityUpdate, MemoActivityUpdate: none,
		                 CreateCalendar: N, DeleteCalendar: none,
		                 InviteToCalendar, JoinCalendar, LeaveCalendar,
		                 Chat, 
		                 ViewCalendar, DisplayCalendar, 
		                 CalendarNotify: none,
                                 AddedToCalendar: none,
		                 CreateEvent, DeleteEvent,
		                 ChangeEventDateAndTime,
		                 CommentOnEvent, 
		                 ViewEvent, DisplayEvent,
		                 EventNotify, 
		                 CreateMemo, DeleteMemo,
		                 CommentOnMemo, 
		                 ViewMemo, DisplayMemo,
		                 MemoNotify: none] is
	    par CreateCalendar in
                Calendar [CalendarActivtyUpdate, EventActivityUpdate, MemoActivityUpdate,
		          CreateCalendar, DeleteCalendar, 
		          InviteToCalendar, JoinCalendar, LeaveCalendar,
		          Chat, 
		          ViewCalendar, DisplayCalendar, 
		          CalendarNotify,
                          AddedToCalendar,
		          CreateEvent, DeleteEvent,
		          ChangeEventDateAndTime,
		          CommentOnEvent, 
		          ViewEvent, DisplayEvent,
		          EventNotify, 
		          CreateMemo, DeleteMemo,
		          CommentOnMemo, 
		          ViewMemo, DisplayMemo,
		          MemoNotify] (1, 0, {}, {}, {}, {}) 
            ||
                Calendar [CalendarActivtyUpdate, EventActivityUpdate, MemoActivityUpdate,
		          CreateCalendar, DeleteCalendar, 
		          InviteToCalendar, JoinCalendar, LeaveCalendar,
		          Chat, 
		          ViewCalendar, DisplayCalendar, 
		          CalendarNotify,
		          AddedToCalendar,
		          CreateEvent, DeleteEvent,
		          ChangeEventDateAndTime,
		          CommentOnEvent, 
		          ViewEvent, DisplayEvent,
		          EventNotify, 
		          CreateMemo, DeleteMemo,
		          CommentOnMemo, 
		          ViewMemo, DisplayMemo,
		          MemoNotify] (2, 0, {}, {}, {}, {})
	  end par
	end process
	
	process UserManager [SignUp, SignIn, SignOut: N,
		             CreateCalendar: N, DeleteCalendar: none, 
		             InviteToCalendar, JoinCalendar, LeaveCalendar,
		             Chat, 
			     ViewCalendar, DisplayCalendar, 
		 	     CalendarNotify: none,
		 	     AddedToCalendar: none,
			     CreateEvent, DeleteEvent,
			     ChangeEventDateAndTime,
			     CommentOnEvent, 
			     ViewEvent, DisplayEvent,
			     EventNotify, 
			     CreateMemo, DeleteMemo,
			     CommentOnMemo, 
			     ViewMemo, DisplayMemo,
			     MemoNotify: none] is
	    par
                User [SignUp, SignIn, SignOut,
		      CreateCalendar, DeleteCalendar, 
		      InviteToCalendar, JoinCalendar, LeaveCalendar,
		      Chat, 
		      ViewCalendar, DisplayCalendar, 
		      CalendarNotify,
		      AddedToCalendar,
		      CreateEvent, DeleteEvent,
		      ChangeEventDateAndTime,
		      CommentOnEvent, 
		      ViewEvent, DisplayEvent,
		      EventNotify, 
		      CreateMemo, DeleteMemo,
		      CommentOnMemo, 
		      ViewMemo, DisplayMemo,
		      MemoNotify] (1, {}) -- user 1 with no calendars currently
              ||
                 User [SignUp, SignIn, SignOut,
		       CreateCalendar, DeleteCalendar, 
		       InviteToCalendar, JoinCalendar, LeaveCalendar,
		       Chat, 
		       ViewCalendar, DisplayCalendar, 
		       CalendarNotify,
		       AddedToCalendar,
		       CreateEvent, DeleteEvent,
		       ChangeEventDateAndTime,
		       CommentOnEvent, 
		       ViewEvent, DisplayEvent,
		       EventNotify, 
		       CreateMemo, DeleteMemo,
		       CommentOnMemo, 
		       ViewMemo, DisplayMemo,
		       MemoNotify] (2, {}) -- user 2 with no calendars currently
              end par
        end process  

	process Calendar[CalendarActivtyUpdate, EventActivityUpdate, MemoActivityUpdate: none,
		         CreateCalendarReceive: N, DeleteCalendarReceive: none, 
		         InviteToCalendarReceive, JoinCalendarReceive, LeaveCalendarReceive,
		         ChatReceive, 
		         ViewCalendarReceive, DisplayCalendar,
		         CalendarNotify: none,
                         AddedToCalendar: none,
		         CreateEventReceive, DeleteEventReceive,
		         ChangeEventDateAndTimeReceive,
		         CommentOnEventReceive, 
		         ViewEventReceive, DisplayEvent,
		         EventNotify,
		         CreateMemoReceive, DeleteMemoReceive,
		         CommentOnMemoReceive, 
		         ViewMemoReceive, DisplayMemo,
		         MemoNotify: none] (CalendarID: Nat, in var
		                            MakerID: Nat, in var
		                            ListOfUID: ListOfUserID, in var
		                            ListOfE: ListOfEvent, in var
		                            ListOfM: ListOfMemo, in var
		                            ListOfA: ListOfActivity) is
          var ActiveCal: Nat in
            ActiveCal := 0;
            loop
		    select
		    -- From Calendar to none
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        CalendarActivtyUpdate
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        EventActivityUpdate
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        MemoActivityUpdate
		      end if
		    []
		    -- --------------------------------------------------------
		    -- From User to Calendar (Basic)
		    if ((ActiveCal == 0) and (ActiveCal != CalendarID)) then
		        var UserID: Nat in
                          CreateCalendarReceive(?UserID);
                          if(MakerID == 0) then
                            ActiveCal := CalendarID;
                            MakerID := UserID;
                            ListOfUID := cons(MakerID, ListOfUID)
                          end if
		        end var		        
		    end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        DeleteCalendarReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        InviteToCalendarReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        JoinCalendarReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        LeaveCalendarReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        ChatReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        ViewCalendarReceive
		      end if
		    []
	            -- --------------------------------------------------------
		    -- From Calendar to User (Basic)
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        DisplayCalendar
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        CalendarNotify
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        AddedToCalendar
		      end if
		    []
		    -- --------------------------------------------------------
		    -- --------------------------------------------------------
		    -- --------------------------------------------------------
		    -- From User to Calendar (Event)
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        CreateEventReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        DeleteEventReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        ChangeEventDateAndTimeReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        CommentOnEventReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        ViewEventReceive
		      end if
		    []
		    -- --------------------------------------------------------
		    -- From Calendar to User (Event)
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        DisplayEvent
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        EventNotify
		      end if
		    []
		    -- --------------------------------------------------------
		    -- --------------------------------------------------------
		    -- --------------------------------------------------------
		    -- From User to Calendar (Memo)
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        CreateMemoReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        DeleteMemoReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        CommentOnMemoReceive
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        ViewMemoReceive
		      end if
		    []
		    -- --------------------------------------------------------
		    -- From Calendar to User (Memo)
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        DisplayMemo
		      end if
		    []
		      if ((ActiveCal != 0) and (ActiveCal == CalendarID)) then
		        MemoNotify
		      end if
		    end select
	    end loop
          end var
	end process

	process User[SignUp, SignIn, SignOut: N,
		     CreateCalendar: N, DeleteCalendar: none, 
		     InviteToCalendar, JoinCalendar, LeaveCalendar,
		     Chat, 
		     ViewCalendar, DisplayCalendarReceive, 
		     CalendarNotifyReceive: none,
		     AddedToCalendarReceive: none,
		     CreateEvent, DeleteEvent,
		     ChangeEventDateAndTime,
		     CommentOnEvent, 
		     ViewEvent, DisplayEventReceive,
		     EventNotifyReceive, 
		     CreateMemo, DeleteMemo,
		     CommentOnMemo, 
		     ViewMemo, DisplayMemoReceive,
		     MemoNotifyReceive: none] (UserID: Nat, in var ListOfCalID: ListOfCalendarID) is
	  var signedUp: bool, signedIn: bool, signedOut: bool, ActiveUser: Nat in
	  
	  -- user created in user manager essentially means the user is signed up & ultimately signed
	  -- in the TimeTree Application; create implies signed up which further implies signed in.
	  signedUp := true;
	  signedIn := true;
	  signedOut := false;
	  ActiveUser := 0;
	  loop
	    select
	    -- From User to none
	      if ((ActiveUser == 0) and (ActiveUser != UserID)) then
	        if ((signedUp == false) and (signedIn == false) and (signedOut == false)) then
                  SignUp(UserID);
                  signedUp := true;
	          signedIn := true;
	          signedOut := false;
	          ActiveUser := UserID
	        end if
	      end if
	    []
	      if ((ActiveUser == 0) and (ActiveUser != UserID)) then
	        if ((signedUp == true) and (signedIn == false) and (signedOut == false)) then
                  SignIn(UserID);
                  signedUp := true;
	          signedIn := true;
	          signedOut := false;
	          ActiveUser := UserID
	        end if
	      end if
	    []
	      if ((ActiveUser != 0) and (ActiveUser == UserID)) then
	        if ((signedUp == true) and (signedIn == true) and (signedOut == false)) then
                  SignOut(UserID);
                  signedUp := true;
                  signedIn := false;
	          signedOut := true;
	          ActiveUser := 0
	        end if
	      end if
	    []
	    -- ---------------------------------------------------------------------------------------
	    -- From User to Calendar (Basic)
	      if (signedIn == true) then
	        if (ActiveUser == UserID) then
	          CreateCalendar(ActiveUser)
	        end if
	      end if
	    []
	      if (signedIn == true) then
	        DeleteCalendar
	      end if                
	    []
	      if (signedIn == true) then
	        InviteToCalendar
	      end if
	    []
	      if (signedIn == true) then
	        JoinCalendar
	      end if
	    []
	      if (signedIn == true) then
	        LeaveCalendar
	      end if
	    []
	      if (signedIn == true) then
	        Chat
	      end if
	    []
	      if (signedIn == true) then
	        ViewCalendar
	      end if
	    []
	    -- -------------------------------------------------------------------
	    -- From Calendar to User (Basic)
	      if (signedIn == true) then
	        DisplayCalendarReceive
	      end if
	    []
	      if (signedIn == true) then
	        CalendarNotifyReceive
	      end if
	    []
	      if (signedIn == true) then
	        AddedToCalendarReceive
	      end if
	    []
	    -- -------------------------------------------------------------------
	    -- -------------------------------------------------------------------
	    -- -------------------------------------------------------------------
	    -- From User to Calendar (Event)
	      if (signedIn == true) then
	        CreateEvent
	      end if
	    []
	      if (signedIn == true) then
	        DeleteEvent
	      end if
	    []
	      if (signedIn == true) then
	        ChangeEventDateAndTime
	      end if
	    []
	      if (signedIn == true) then
	        CommentOnEvent
	      end if
	    []
	      if (signedIn == true) then
	        ViewEvent
	      end if
	    []
	    -- -------------------------------------------------------------------
	    -- From Calendar to User (Event)
	      if (signedIn == true) then
	        DisplayEventReceive
	      end if
	    []
	      if (signedIn == true) then
	        EventNotifyReceive
	      end if
	    []
	    -- -------------------------------------------------------------------
	    -- -------------------------------------------------------------------
	    -- -------------------------------------------------------------------
	    -- From User to Calendar (Memo)
	      if (signedIn == true) then
	        CreateMemo
	      end if
	    []
	      if (signedIn == true) then
	        DeleteMemo
	      end if
	    []
	      if (signedIn == true) then
	        CommentOnMemo
	      end if
	    []
	      if (signedIn == true) then
	        ViewMemo
	      end if
	    []
	    -- -------------------------------------------------------------------
	    -- From Calendar to User (Memo)
	      if (signedIn == true) then
	        DisplayMemoReceive
	      end if
	    []
	      if (signedIn == true) then
	        MemoNotifyReceive
	      end if
	    end select
	  end loop
	  end var
	end process

	process Main[SignUp, SignIn, SignOut: N,
	             CalendarActivtyUpdate, EventActivityUpdate, MemoActivityUpdate: none,
		     CreateCalendar: N, DeleteCalendar: none,
		     InviteToCalendar, JoinCalendar, LeaveCalendar,
		     Chat, 
		     ViewCalendar, DisplayCalendar, 
		     CalendarNotify: none,
		     AddedToCalendar: none,
		     CreateEvent, DeleteEvent,
		     ChangeEventDateAndTime,
		     CommentOnEvent, 
		     ViewEvent, DisplayEvent,
		     EventNotify, 
		     CreateMemo, DeleteMemo,
		     CommentOnMemo, 
		     ViewMemo, DisplayMemo,
		     MemoNotify: none] is
	  par CreateCalendar, DeleteCalendar, 
              InviteToCalendar, JoinCalendar, LeaveCalendar,
              Chat, 
              ViewCalendar, DisplayCalendar, 
	      CalendarNotify,
              AddedToCalendar,
	      CreateEvent, DeleteEvent,
	      ChangeEventDateAndTime,
	      CommentOnEvent, 
	      ViewEvent, DisplayEvent,
	      EventNotify, 
	      CreateMemo, DeleteMemo,
	      CommentOnMemo, 
	      ViewMemo, DisplayMemo,
	      MemoNotify in
	     UserManager [SignUp, SignIn, SignOut,
		          CreateCalendar, DeleteCalendar, 
		          InviteToCalendar, JoinCalendar, LeaveCalendar,
		          Chat, 
			  ViewCalendar, DisplayCalendar, 
		 	  CalendarNotify,
                          AddedToCalendar,
			  CreateEvent, DeleteEvent,
			  ChangeEventDateAndTime,
			  CommentOnEvent, 
			  ViewEvent, DisplayEvent,
			  EventNotify, 
			  CreateMemo, DeleteMemo,
			  CommentOnMemo, 
			  ViewMemo, DisplayMemo,
			  MemoNotify]
	  ||
	    CalendarManager [CalendarActivtyUpdate, EventActivityUpdate, MemoActivityUpdate,
		             CreateCalendar, DeleteCalendar, 
		             InviteToCalendar, JoinCalendar, LeaveCalendar,
		             Chat, 
		             ViewCalendar, DisplayCalendar, 
		             CalendarNotify,
		             AddedToCalendar,
			     CreateEvent, DeleteEvent,
			     ChangeEventDateAndTime,
			     CommentOnEvent, 
			     ViewEvent, DisplayEvent,
			     EventNotify, 
			     CreateMemo, DeleteMemo,
			     CommentOnMemo, 
			     ViewMemo, DisplayMemo,
			     MemoNotify]
	  end par
	end process
end module

